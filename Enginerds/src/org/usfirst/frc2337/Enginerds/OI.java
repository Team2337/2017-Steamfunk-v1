// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2337.Enginerds;

import org.usfirst.frc2337.Enginerds.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import org.usfirst.frc2337.Enginerds.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Joystick driveJoystick;
    public Joystick operatorJoystick;
    public Joystick operatorControls;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        operatorControls = new Joystick(2);
        
        operatorJoystick = new Joystick(1);
        
        driveJoystick = new Joystick(0);
        


        // SmartDashboard Buttons
        SmartDashboard.putData("ChassisPID_drive", new ChassisPID_drive());
        SmartDashboard.putData("ChassisPID_gyroForward", new ChassisPID_gyroForward());
        SmartDashboard.putData("ChassisTransmission_low", new ChassisTransmission_low());
        SmartDashboard.putData("ChassisTransmission_high", new ChassisTransmission_high());
        SmartDashboard.putData("PTO_engage", new PTO_engage());
        SmartDashboard.putData("PTO_disengage", new PTO_disengage());
        SmartDashboard.putData("MainLED_on", new MainLED_on());
        SmartDashboard.putData("MainLED_off", new MainLED_off());
        SmartDashboard.putData("RopeClimber_up", new RopeClimber_up());
        SmartDashboard.putData("RopeClimber_down", new RopeClimber_down());
        SmartDashboard.putData("TargetingLED_default", new TargetingLED_default());
        SmartDashboard.putData("GearIntake_enable", new GearIntake_enable());
        SmartDashboard.putData("GearIntake_disable", new GearIntake_disable());
        SmartDashboard.putData("GearLoader_enable", new GearLoader_enable());
        SmartDashboard.putData("GearLoader_disable", new GearLoader_disable());
        SmartDashboard.putData("FuelntakeArm_enable", new FuelntakeArm_enable());
        SmartDashboard.putData("FuelIntakeArm_disable", new FuelIntakeArm_disable());
        SmartDashboard.putData("FuelShooter_enable", new FuelShooter_enable());
        SmartDashboard.putData("FuelShooter_disable", new FuelShooter_disable());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getDriveJoystick() {
        return driveJoystick;
    }

    public Joystick getOperatorJoystick() {
        return operatorJoystick;
    }

    public Joystick getOperatorControls() {
        return operatorControls;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

